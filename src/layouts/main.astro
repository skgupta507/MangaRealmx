---
import Header from "../components/global/Header/Header.astro"
import { Authentication } from "../components/global/Authentication/Authentication"
import Footer from "../components/global/Footer/Footer.astro"
import AlertBox from "../components/global/AlertBox/AlertBox.astro"
import AdContainer from "../components/Widgets/AdContainer/AdContainer.astro"
import { PageLoader } from "../components/global/PageLoader/PageLoader"
import "../styles/global/main.scss"
import { HCAPTCHA_SITE_KEY, authApiUrl, backendApiUrl } from "../utilities/config.ts"
import { getAlertRedirectUrl } from "../utilities/misc"
import { getScripts, getValues, getSettings } from "../services/MangaRealm.api/admin/handlers.ts"
import { ShowAlert } from "../utilities/misc.ts"

const { title, page } = Astro.props as { title: string; page: string };
const cookies = Astro.cookies
const userData = cookies.get("user_data")?.value || "{}"
const auth_token = cookies.get("auth_token")?.value || ""
const user = JSON.parse(userData)


const settings = await getSettings()
const maintanence = settings.maintanence.value

if (maintanence) {
  const base = Astro.url.origin
  const message = "Site in under maintanence";
  const description = "Hello! We're currently making some improvements to our site to serve you better. Please bear with us, and we'll be back shortly!";
  const redirectUrl = getAlertRedirectUrl(base, message, description)

  return Astro.redirect(redirectUrl) 
} 


const values = await getValues()
const scripts = await getScripts()
const headScripts = scripts.head_scripts
const footScripts = scripts.foot_scripts
const globalHeadScript = headScripts.global_head.value
const globalFootScript = footScripts.global_foot.value
const bottomAdscript = scripts.ads_scripts.bottom_advertisement.value
const bottomAdscriptHeight = scripts.ads_scripts.bottom_advertisement.height
const topAdscript = scripts.ads_scripts.top_advertisement.value
const topAdscriptHeight = scripts.ads_scripts.top_advertisement.height
//@ts-ignore
const pageHeadScript = headScripts[`${page}_head`].value
//@ts-ignore
const pageFootScript = footScripts[`${page}_foot`].value
const favicon = values.images.favicon_logo.value
const devToolsDetection = settings.dev_tools_detection.value
const adblockDetection = settings.adblocker_detection.value
---

<html lang="en">
  <head set:html={globalHeadScript + pageHeadScript}>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
    />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>{title}</title>
    <link rel="icon" type="image/x-icon" href={favicon}>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
  </head>
  <body class="bg-zinc-900 dark:text-white scrollable relative"  set:html={globalFootScript + pageFootScript}>
    <Authentication authApiUrl={authApiUrl} client:load /> 
    <Header/>
    <AdContainer value={topAdscript} height={topAdscriptHeight} />
    <AlertBox/>
    <main class="main-content">
      <slot /> 
    </main>
    <AdContainer value={bottomAdscript} height={bottomAdscriptHeight} />
    <Footer/>
    <PageLoader />
    <input value={backendApiUrl} type="hidden" class="backend-api-inpt" readonly />
  </body>
</html>
<script define:vars={{ HCAPTCHA_SITE_KEY, user, ShowAlert, auth_token, devToolsDetection, adblockDetection }}>
  import "../utilities/devToolsDetector.js"
  import "../utilities/adblockerDetection.js"

  if (devToolsDetection == true) {
    activateDevToolsDetector()
  }

  if (adblockDetection == true) {
    adblockDetector()
  }

  window.user = user
  window.auth_token = auth_token
  window.captchas = {}

  window.renderCaptchaWidgets = () => {
    $(".captcha-widgets").each(function() {
      const id = $(this).attr("id")
      captchas[id] = hcaptcha.render(id, {
            'sitekey' : HCAPTCHA_SITE_KEY,
          });
    })
  }

  window.getCaptchaResponse = (id) => {
    const widgetID = captchas[id] 
    return hcaptcha.getResponse(widgetID)
  }
</script>
